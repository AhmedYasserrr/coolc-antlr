([] ([16] class Rev { ([30 16] ([34 30 16] len : Int ;) ([34 30 16] istr : String <- ([45 34 30 16] "") ;) ([34 30 16] i : Int <- ([45 34 30 16] 0) ;) ([35 30 16] reverse ( ([52 35 30 16] str : String) ) : String { ([66 35 30 16] { ([108 66 35 30 16] ([14 108 66 35 30 16] len <- ([91 14 108 66 35 30 16] str)) . ([201 108 66 35 30 16] length ( ))) ; ([108 66 35 30 16] while ([102 108 66 35 30 16] ([14 102 108 66 35 30 16] i) < ([188 102 108 66 35 30 16] len)) loop ([104 108 66 35 30 16] { ([108 104 108 66 35 30 16] ([14 108 104 108 66 35 30 16] istr <- ([91 14 108 104 108 66 35 30 16] istr)) . ([201 108 104 108 66 35 30 16] concat ( ([76 201 108 104 108 66 35 30 16] ([14 76 201 108 104 108 66 35 30 16] str) . ([201 76 201 108 104 108 66 35 30 16] substr ( ([76 201 76 201 108 104 108 66 35 30 16] ([14 76 201 76 201 108 104 108 66 35 30 16] ([14 14 76 201 76 201 108 104 108 66 35 30 16] len) - ([185 14 76 201 76 201 108 104 108 66 35 30 16] i)) - ([185 76 201 76 201 108 104 108 66 35 30 16] 1)) , ([78 201 76 201 108 104 108 66 35 30 16] 1) ))) ))) ; ([108 104 108 66 35 30 16] ([14 108 104 108 66 35 30 16] i <- ([91 14 108 104 108 66 35 30 16] i)) + ([182 108 104 108 66 35 30 16] 1)) ; }) pool) ; ([108 66 35 30 16] istr) ; }) } ;)) } ;) ([16] class Main inherits IO { ([30 16] ([34 30 16] str : String ;) ([34 30 16] revstr : String ;) ([34 30 16] inn : Int ;) ([35 30 16] main ( ) : Object { ([66 35 30 16] { ([108 66 35 30 16] ([92 108 66 35 30 16] out_string ( ([76 92 108 66 35 30 16] "Enter the string : ") ))) ; ([108 66 35 30 16] str <- ([91 108 66 35 30 16] ([92 91 108 66 35 30 16] in_string ( )))) ; ([108 66 35 30 16] ([14 108 66 35 30 16] revstr <- ([91 14 108 66 35 30 16] ( ([165 91 14 108 66 35 30 16] new Rev) ))) . ([201 108 66 35 30 16] reverse ( ([76 201 108 66 35 30 16] str) ))) ; ([108 66 35 30 16] ([92 108 66 35 30 16] out_string ( ([76 92 108 66 35 30 16] "Enter 0 to give the reverse string, 1 to check whether it is a palindrome.\n") ))) ; ([108 66 35 30 16] inn <- ([91 108 66 35 30 16] ([92 91 108 66 35 30 16] in_int ( )))) ; ([108 66 35 30 16] if ([94 108 66 35 30 16] ([14 94 108 66 35 30 16] inn) = ([194 94 108 66 35 30 16] 0)) then ([96 108 66 35 30 16] { ([108 96 108 66 35 30 16] ([92 108 96 108 66 35 30 16] out_string ( ([76 92 108 96 108 66 35 30 16] "The reversed string is : ") ))) ; ([108 96 108 66 35 30 16] ([92 108 96 108 66 35 30 16] out_string ( ([76 92 108 96 108 66 35 30 16] revstr) ))) ; }) else ([98 108 66 35 30 16] { ([108 98 108 66 35 30 16] if ([94 108 98 108 66 35 30 16] ([14 94 108 98 108 66 35 30 16] inn) = ([194 94 108 98 108 66 35 30 16] 1)) then ([96 108 98 108 66 35 30 16] { ([108 96 108 98 108 66 35 30 16] if ([94 108 96 108 98 108 66 35 30 16] ([14 94 108 96 108 98 108 66 35 30 16] str) = ([194 94 108 96 108 98 108 66 35 30 16] revstr)) then ([96 108 96 108 98 108 66 35 30 16] ([92 96 108 96 108 98 108 66 35 30 16] out_string ( ([76 92 96 108 96 108 98 108 66 35 30 16] "\nThe string is a palindrome.\n") ))) else ([98 108 96 108 98 108 66 35 30 16] ([92 98 108 96 108 98 108 66 35 30 16] out_string ( ([76 92 98 108 96 108 98 108 66 35 30 16] "\nThe string is not a palindrome.\n") ))) fi) ; }) else ([98 108 98 108 66 35 30 16] { ([108 98 108 98 108 66 35 30 16] ([92 108 98 108 98 108 66 35 30 16] out_string ( ([76 92 108 98 108 98 108 66 35 30 16] "Enter appropriate option\n") ))) ; ([108 98 108 98 108 66 35 30 16] ([92 108 98 108 98 108 66 35 30 16] main ( ))) ; }) fi) ; }) fi) ; ([108 66 35 30 16] ([92 108 66 35 30 16] out_string ( ([76 92 108 66 35 30 16] "\n") ))) ; }) } ;)) } ;) <EOF>)