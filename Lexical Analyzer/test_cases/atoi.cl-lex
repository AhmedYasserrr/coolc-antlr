13 OBJECT_IDENTIFIER class
13 TYPE_IDENTIFIER A2I
13 LBRACE {
15 OBJECT_IDENTIFIER c2i
15 LPAREN (
15 OBJECT_IDENTIFIER char
15 COLON :
15 TYPE_IDENTIFIER String
15 RPAREN )
15 COLON :
15 TYPE_IDENTIFIER Int
15 LBRACE {
16 OBJECT_IDENTIFIER if
16 OBJECT_IDENTIFIER char
16 EQUAL =
16 STRING "0"
16 OBJECT_IDENTIFIER then
16 INT 0
16 OBJECT_IDENTIFIER else
17 OBJECT_IDENTIFIER if
17 OBJECT_IDENTIFIER char
17 EQUAL =
17 STRING "1"
17 OBJECT_IDENTIFIER then
17 INT 1
17 OBJECT_IDENTIFIER else
18 OBJECT_IDENTIFIER if
18 OBJECT_IDENTIFIER char
18 EQUAL =
18 STRING "2"
18 OBJECT_IDENTIFIER then
18 INT 2
18 OBJECT_IDENTIFIER else
19 OBJECT_IDENTIFIER if
19 OBJECT_IDENTIFIER char
19 EQUAL =
19 STRING "3"
19 OBJECT_IDENTIFIER then
19 INT 3
19 OBJECT_IDENTIFIER else
20 OBJECT_IDENTIFIER if
20 OBJECT_IDENTIFIER char
20 EQUAL =
20 STRING "4"
20 OBJECT_IDENTIFIER then
20 INT 4
20 OBJECT_IDENTIFIER else
21 OBJECT_IDENTIFIER if
21 OBJECT_IDENTIFIER char
21 EQUAL =
21 STRING "5"
21 OBJECT_IDENTIFIER then
21 INT 5
21 OBJECT_IDENTIFIER else
22 OBJECT_IDENTIFIER if
22 OBJECT_IDENTIFIER char
22 EQUAL =
22 STRING "6"
22 OBJECT_IDENTIFIER then
22 INT 6
22 OBJECT_IDENTIFIER else
23 OBJECT_IDENTIFIER if
23 OBJECT_IDENTIFIER char
23 EQUAL =
23 STRING "7"
23 OBJECT_IDENTIFIER then
23 INT 7
23 OBJECT_IDENTIFIER else
24 OBJECT_IDENTIFIER if
24 OBJECT_IDENTIFIER char
24 EQUAL =
24 STRING "8"
24 OBJECT_IDENTIFIER then
24 INT 8
24 OBJECT_IDENTIFIER else
25 OBJECT_IDENTIFIER if
25 OBJECT_IDENTIFIER char
25 EQUAL =
25 STRING "9"
25 OBJECT_IDENTIFIER then
25 INT 9
25 OBJECT_IDENTIFIER else
26 LBRACE {
26 OBJECT_IDENTIFIER abort
26 LPAREN (
26 RPAREN )
26 SEMICOLON ;
26 INT 0
26 SEMICOLON ;
26 RBRACE }
27 OBJECT_IDENTIFIER fi
27 OBJECT_IDENTIFIER fi
27 OBJECT_IDENTIFIER fi
27 OBJECT_IDENTIFIER fi
27 OBJECT_IDENTIFIER fi
27 OBJECT_IDENTIFIER fi
27 OBJECT_IDENTIFIER fi
27 OBJECT_IDENTIFIER fi
27 OBJECT_IDENTIFIER fi
27 OBJECT_IDENTIFIER fi
28 RBRACE }
28 SEMICOLON ;
33 OBJECT_IDENTIFIER i2c
33 LPAREN (
33 OBJECT_IDENTIFIER i
33 COLON :
33 TYPE_IDENTIFIER Int
33 RPAREN )
33 COLON :
33 TYPE_IDENTIFIER String
33 LBRACE {
34 OBJECT_IDENTIFIER if
34 OBJECT_IDENTIFIER i
34 EQUAL =
34 INT 0
34 OBJECT_IDENTIFIER then
34 STRING "0"
34 OBJECT_IDENTIFIER else
35 OBJECT_IDENTIFIER if
35 OBJECT_IDENTIFIER i
35 EQUAL =
35 INT 1
35 OBJECT_IDENTIFIER then
35 STRING "1"
35 OBJECT_IDENTIFIER else
36 OBJECT_IDENTIFIER if
36 OBJECT_IDENTIFIER i
36 EQUAL =
36 INT 2
36 OBJECT_IDENTIFIER then
36 STRING "2"
36 OBJECT_IDENTIFIER else
37 OBJECT_IDENTIFIER if
37 OBJECT_IDENTIFIER i
37 EQUAL =
37 INT 3
37 OBJECT_IDENTIFIER then
37 STRING "3"
37 OBJECT_IDENTIFIER else
38 OBJECT_IDENTIFIER if
38 OBJECT_IDENTIFIER i
38 EQUAL =
38 INT 4
38 OBJECT_IDENTIFIER then
38 STRING "4"
38 OBJECT_IDENTIFIER else
39 OBJECT_IDENTIFIER if
39 OBJECT_IDENTIFIER i
39 EQUAL =
39 INT 5
39 OBJECT_IDENTIFIER then
39 STRING "5"
39 OBJECT_IDENTIFIER else
40 OBJECT_IDENTIFIER if
40 OBJECT_IDENTIFIER i
40 EQUAL =
40 INT 6
40 OBJECT_IDENTIFIER then
40 STRING "6"
40 OBJECT_IDENTIFIER else
41 OBJECT_IDENTIFIER if
41 OBJECT_IDENTIFIER i
41 EQUAL =
41 INT 7
41 OBJECT_IDENTIFIER then
41 STRING "7"
41 OBJECT_IDENTIFIER else
42 OBJECT_IDENTIFIER if
42 OBJECT_IDENTIFIER i
42 EQUAL =
42 INT 8
42 OBJECT_IDENTIFIER then
42 STRING "8"
42 OBJECT_IDENTIFIER else
43 OBJECT_IDENTIFIER if
43 OBJECT_IDENTIFIER i
43 EQUAL =
43 INT 9
43 OBJECT_IDENTIFIER then
43 STRING "9"
43 OBJECT_IDENTIFIER else
44 LBRACE {
44 OBJECT_IDENTIFIER abort
44 LPAREN (
44 RPAREN )
44 SEMICOLON ;
44 STRING ""
44 SEMICOLON ;
44 RBRACE }
45 OBJECT_IDENTIFIER fi
45 OBJECT_IDENTIFIER fi
45 OBJECT_IDENTIFIER fi
45 OBJECT_IDENTIFIER fi
45 OBJECT_IDENTIFIER fi
45 OBJECT_IDENTIFIER fi
45 OBJECT_IDENTIFIER fi
45 OBJECT_IDENTIFIER fi
45 OBJECT_IDENTIFIER fi
45 OBJECT_IDENTIFIER fi
46 RBRACE }
46 SEMICOLON ;
56 OBJECT_IDENTIFIER a2i
56 LPAREN (
56 OBJECT_IDENTIFIER s
56 COLON :
56 TYPE_IDENTIFIER String
56 RPAREN )
56 COLON :
56 TYPE_IDENTIFIER Int
56 LBRACE {
57 OBJECT_IDENTIFIER if
57 OBJECT_IDENTIFIER s
57 DOT .
57 OBJECT_IDENTIFIER length
57 LPAREN (
57 RPAREN )
57 EQUAL =
57 INT 0
57 OBJECT_IDENTIFIER then
57 INT 0
57 OBJECT_IDENTIFIER else
58 OBJECT_IDENTIFIER if
58 OBJECT_IDENTIFIER s
58 DOT .
58 OBJECT_IDENTIFIER substr
58 LPAREN (
58 INT 0
58 COMMA ,
58 INT 1
58 RPAREN )
58 EQUAL =
58 STRING "-"
58 OBJECT_IDENTIFIER then
58 INTCOMP ~
58 OBJECT_IDENTIFIER a2i_aux
58 LPAREN (
58 OBJECT_IDENTIFIER s
58 DOT .
58 OBJECT_IDENTIFIER substr
58 LPAREN (
58 INT 1
58 COMMA ,
58 OBJECT_IDENTIFIER s
58 DOT .
58 OBJECT_IDENTIFIER length
58 LPAREN (
58 RPAREN )
58 SUB -
58 INT 1
58 RPAREN )
58 RPAREN )
58 OBJECT_IDENTIFIER else
59 OBJECT_IDENTIFIER if
59 OBJECT_IDENTIFIER s
59 DOT .
59 OBJECT_IDENTIFIER substr
59 LPAREN (
59 INT 0
59 COMMA ,
59 INT 1
59 RPAREN )
59 EQUAL =
59 STRING "+"
59 OBJECT_IDENTIFIER then
59 OBJECT_IDENTIFIER a2i_aux
59 LPAREN (
59 OBJECT_IDENTIFIER s
59 DOT .
59 OBJECT_IDENTIFIER substr
59 LPAREN (
59 INT 1
59 COMMA ,
59 OBJECT_IDENTIFIER s
59 DOT .
59 OBJECT_IDENTIFIER length
59 LPAREN (
59 RPAREN )
59 SUB -
59 INT 1
59 RPAREN )
59 RPAREN )
59 OBJECT_IDENTIFIER else
60 OBJECT_IDENTIFIER a2i_aux
60 LPAREN (
60 OBJECT_IDENTIFIER s
60 RPAREN )
61 OBJECT_IDENTIFIER fi
61 OBJECT_IDENTIFIER fi
61 OBJECT_IDENTIFIER fi
62 RBRACE }
62 SEMICOLON ;
68 OBJECT_IDENTIFIER a2i_aux
68 LPAREN (
68 OBJECT_IDENTIFIER s
68 COLON :
68 TYPE_IDENTIFIER String
68 RPAREN )
68 COLON :
68 TYPE_IDENTIFIER Int
68 LBRACE {
69 LPAREN (
69 OBJECT_IDENTIFIER let
69 OBJECT_IDENTIFIER int
69 COLON :
69 TYPE_IDENTIFIER Int
69 ASSIGN <-
69 INT 0
69 OBJECT_IDENTIFIER in
70 LBRACE {
71 LPAREN (
71 OBJECT_IDENTIFIER let
71 OBJECT_IDENTIFIER j
71 COLON :
71 TYPE_IDENTIFIER Int
71 ASSIGN <-
71 OBJECT_IDENTIFIER s
71 DOT .
71 OBJECT_IDENTIFIER length
71 LPAREN (
71 RPAREN )
71 OBJECT_IDENTIFIER in
72 LPAREN (
72 OBJECT_IDENTIFIER let
72 OBJECT_IDENTIFIER i
72 COLON :
72 TYPE_IDENTIFIER Int
72 ASSIGN <-
72 INT 0
72 OBJECT_IDENTIFIER in
73 OBJECT_IDENTIFIER while
73 OBJECT_IDENTIFIER i
73 LT <
73 OBJECT_IDENTIFIER j
73 OBJECT_IDENTIFIER loop
74 LBRACE {
75 OBJECT_IDENTIFIER int
75 ASSIGN <-
75 OBJECT_IDENTIFIER int
75 MUL *
75 INT 10
75 ADD +
75 OBJECT_IDENTIFIER c2i
75 LPAREN (
75 OBJECT_IDENTIFIER s
75 DOT .
75 OBJECT_IDENTIFIER substr
75 LPAREN (
75 OBJECT_IDENTIFIER i
75 COMMA ,
75 INT 1
75 RPAREN )
75 RPAREN )
75 SEMICOLON ;
76 OBJECT_IDENTIFIER i
76 ASSIGN <-
76 OBJECT_IDENTIFIER i
76 ADD +
76 INT 1
76 SEMICOLON ;
77 RBRACE }
78 OBJECT_IDENTIFIER pool
79 RPAREN )
80 RPAREN )
80 SEMICOLON ;
81 OBJECT_IDENTIFIER int
81 SEMICOLON ;
82 RBRACE }
83 RPAREN )
84 RBRACE }
84 SEMICOLON ;
90 OBJECT_IDENTIFIER i2a
90 LPAREN (
90 OBJECT_IDENTIFIER i
90 COLON :
90 TYPE_IDENTIFIER Int
90 RPAREN )
90 COLON :
90 TYPE_IDENTIFIER String
90 LBRACE {
91 OBJECT_IDENTIFIER if
91 OBJECT_IDENTIFIER i
91 EQUAL =
91 INT 0
91 OBJECT_IDENTIFIER then
91 STRING "0"
91 OBJECT_IDENTIFIER else
92 OBJECT_IDENTIFIER if
92 INT 0
92 LT <
92 OBJECT_IDENTIFIER i
92 OBJECT_IDENTIFIER then
92 OBJECT_IDENTIFIER i2a_aux
92 LPAREN (
92 OBJECT_IDENTIFIER i
92 RPAREN )
92 OBJECT_IDENTIFIER else
93 STRING "-"
93 DOT .
93 OBJECT_IDENTIFIER concat
93 LPAREN (
93 OBJECT_IDENTIFIER i2a_aux
93 LPAREN (
93 OBJECT_IDENTIFIER i
93 MUL *
93 INTCOMP ~
93 INT 1
93 RPAREN )
93 RPAREN )
94 OBJECT_IDENTIFIER fi
94 OBJECT_IDENTIFIER fi
95 RBRACE }
95 SEMICOLON ;
100 OBJECT_IDENTIFIER i2a_aux
100 LPAREN (
100 OBJECT_IDENTIFIER i
100 COLON :
100 TYPE_IDENTIFIER Int
100 RPAREN )
100 COLON :
100 TYPE_IDENTIFIER String
100 LBRACE {
101 OBJECT_IDENTIFIER if
101 OBJECT_IDENTIFIER i
101 EQUAL =
101 INT 0
101 OBJECT_IDENTIFIER then
101 STRING ""
101 OBJECT_IDENTIFIER else
102 LPAREN (
102 OBJECT_IDENTIFIER let
102 OBJECT_IDENTIFIER next
102 COLON :
102 TYPE_IDENTIFIER Int
102 ASSIGN <-
102 OBJECT_IDENTIFIER i
102 DIV /
102 INT 10
102 OBJECT_IDENTIFIER in
103 OBJECT_IDENTIFIER i2a_aux
103 LPAREN (
103 OBJECT_IDENTIFIER next
103 RPAREN )
103 DOT .
103 OBJECT_IDENTIFIER concat
103 LPAREN (
103 OBJECT_IDENTIFIER i2c
103 LPAREN (
103 OBJECT_IDENTIFIER i
103 SUB -
103 OBJECT_IDENTIFIER next
103 MUL *
103 INT 10
103 RPAREN )
103 RPAREN )
104 RPAREN )
105 OBJECT_IDENTIFIER fi
106 RBRACE }
106 SEMICOLON ;
108 RBRACE }
108 SEMICOLON ;
110 OBJECT_IDENTIFIER class
110 TYPE_IDENTIFIER Main
110 OBJECT_IDENTIFIER inherits
110 TYPE_IDENTIFIER IO
110 LBRACE {
111 OBJECT_IDENTIFIER main
111 LPAREN (
111 RPAREN )
111 COLON :
111 TYPE_IDENTIFIER Object
111 LBRACE {
112 OBJECT_IDENTIFIER let
112 OBJECT_IDENTIFIER a
112 COLON :
112 TYPE_IDENTIFIER Int
112 ASSIGN <-
112 LPAREN (
112 OBJECT_IDENTIFIER new
112 TYPE_IDENTIFIER A2I
112 RPAREN )
112 DOT .
112 OBJECT_IDENTIFIER a2i
112 LPAREN (
112 STRING "678987"
112 RPAREN )
112 COMMA ,
113 OBJECT_IDENTIFIER b
113 COLON :
113 TYPE_IDENTIFIER String
113 ASSIGN <-
113 LPAREN (
113 OBJECT_IDENTIFIER new
113 TYPE_IDENTIFIER A2I
113 RPAREN )
113 DOT .
113 OBJECT_IDENTIFIER i2a
113 LPAREN (
113 INT 678987
113 RPAREN )
113 OBJECT_IDENTIFIER in
114 LBRACE {
115 OBJECT_IDENTIFIER out_int
115 LPAREN (
115 OBJECT_IDENTIFIER a
115 RPAREN )
115 SEMICOLON ;
116 OBJECT_IDENTIFIER out_string
116 LPAREN (
116 STRING " == "
116 RPAREN )
116 SEMICOLON ;
117 OBJECT_IDENTIFIER out_string
117 LPAREN (
117 OBJECT_IDENTIFIER b
117 RPAREN )
117 SEMICOLON ;
118 OBJECT_IDENTIFIER out_string
118 LPAREN (
118 STRING "\n"
118 RPAREN )
118 SEMICOLON ;
119 RBRACE }
120 RBRACE }
120 SEMICOLON ;
121 RBRACE }
121 SEMICOLON ;
