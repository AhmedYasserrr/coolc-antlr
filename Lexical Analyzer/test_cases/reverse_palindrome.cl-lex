11 OBJECT_IDENTIFIER class
11 TYPE_IDENTIFIER Rev
11 LBRACE {
14 OBJECT_IDENTIFIER len
14 COLON :
14 TYPE_IDENTIFIER Int
14 SEMI ;
15 OBJECT_IDENTIFIER istr
15 COLON :
15 TYPE_IDENTIFIER String
15 ASSIGN_OP <-
15 STRING ""
15 SEMI ;
16 OBJECT_IDENTIFIER i
16 COLON :
16 TYPE_IDENTIFIER Int
16 ASSIGN_OP <-
16 INT 0
16 SEMI ;
18 OBJECT_IDENTIFIER reverse
18 LPAREN (
18 OBJECT_IDENTIFIER str
18 COLON :
18 TYPE_IDENTIFIER String
18 RPAREN )
18 COLON :
18 TYPE_IDENTIFIER String
18 LBRACE {
19 LBRACE {
20 OBJECT_IDENTIFIER len
20 ASSIGN_OP <-
20 OBJECT_IDENTIFIER str
20 DOT_OP .
20 OBJECT_IDENTIFIER length
20 LPAREN (
20 RPAREN )
20 SEMI ;
22 OBJECT_IDENTIFIER while
22 OBJECT_IDENTIFIER i
22 LT_OP <
22 OBJECT_IDENTIFIER len
22 OBJECT_IDENTIFIER loop
23 LBRACE {
24 OBJECT_IDENTIFIER istr
24 ASSIGN_OP <-
24 OBJECT_IDENTIFIER istr
24 DOT_OP .
24 OBJECT_IDENTIFIER concat
24 LPAREN (
24 OBJECT_IDENTIFIER str
24 DOT_OP .
24 OBJECT_IDENTIFIER substr
24 LPAREN (
24 OBJECT_IDENTIFIER len
24 MINUS_OP -
24 OBJECT_IDENTIFIER i
24 MINUS_OP -
24 INT 1
24 COMMA ,
24 INT 1
24 RPAREN )
24 RPAREN )
24 SEMI ;
25 OBJECT_IDENTIFIER i
25 ASSIGN_OP <-
25 OBJECT_IDENTIFIER i
25 PLUS_OP +
25 INT 1
25 SEMI ;
26 RBRACE }
27 OBJECT_IDENTIFIER pool
27 SEMI ;
29 OBJECT_IDENTIFIER istr
29 SEMI ;
30 RBRACE }
31 RBRACE }
31 SEMI ;
32 RBRACE }
32 SEMI ;
37 OBJECT_IDENTIFIER class
37 TYPE_IDENTIFIER Main
37 OBJECT_IDENTIFIER inherits
37 TYPE_IDENTIFIER IO
37 LBRACE {
40 OBJECT_IDENTIFIER str
40 COLON :
40 TYPE_IDENTIFIER String
40 SEMI ;
41 OBJECT_IDENTIFIER revstr
41 COLON :
41 TYPE_IDENTIFIER String
41 SEMI ;
43 OBJECT_IDENTIFIER inn
43 COLON :
43 TYPE_IDENTIFIER Int
43 SEMI ;
45 OBJECT_IDENTIFIER main
45 LPAREN (
45 RPAREN )
45 COLON :
45 TYPE_IDENTIFIER Object
45 LBRACE {
46 LBRACE {
47 OBJECT_IDENTIFIER out_string
47 LPAREN (
47 STRING "Enter the string : "
47 RPAREN )
47 SEMI ;
48 OBJECT_IDENTIFIER str
48 ASSIGN_OP <-
48 OBJECT_IDENTIFIER in_string
48 LPAREN (
48 RPAREN )
48 SEMI ;
50 OBJECT_IDENTIFIER revstr
50 ASSIGN_OP <-
50 LPAREN (
50 OBJECT_IDENTIFIER new
50 TYPE_IDENTIFIER Rev
50 RPAREN )
50 DOT_OP .
50 OBJECT_IDENTIFIER reverse
50 LPAREN (
50 OBJECT_IDENTIFIER str
50 RPAREN )
50 SEMI ;
52 OBJECT_IDENTIFIER out_string
52 LPAREN (
52 STRING "Enter 0 to give the reverse string, 1 to check whether it is a palindrome.\n"
52 RPAREN )
52 SEMI ;
53 OBJECT_IDENTIFIER inn
53 ASSIGN_OP <-
53 OBJECT_IDENTIFIER in_int
53 LPAREN (
53 RPAREN )
53 SEMI ;
55 OBJECT_IDENTIFIER if
55 OBJECT_IDENTIFIER inn
55 EQUALS_OP =
55 INT 0
55 OBJECT_IDENTIFIER then
57 LBRACE {
58 OBJECT_IDENTIFIER out_string
58 LPAREN (
58 STRING "The reversed string is : "
58 RPAREN )
58 SEMI ;
59 OBJECT_IDENTIFIER out_string
59 LPAREN (
59 OBJECT_IDENTIFIER revstr
59 RPAREN )
59 SEMI ;
60 RBRACE }
62 OBJECT_IDENTIFIER else
63 LBRACE {
64 OBJECT_IDENTIFIER if
64 OBJECT_IDENTIFIER inn
64 EQUALS_OP =
64 INT 1
64 OBJECT_IDENTIFIER then
66 LBRACE {
67 OBJECT_IDENTIFIER if
67 OBJECT_IDENTIFIER str
67 EQUALS_OP =
67 OBJECT_IDENTIFIER revstr
67 OBJECT_IDENTIFIER then
72 OBJECT_IDENTIFIER out_string
72 LPAREN (
72 STRING "\nThe string is a palindrome.\n"
72 RPAREN )
74 OBJECT_IDENTIFIER else
75 OBJECT_IDENTIFIER out_string
75 LPAREN (
75 STRING "\nThe string is not a palindrome.\n"
75 RPAREN )
76 OBJECT_IDENTIFIER fi
76 SEMI ;
77 RBRACE }
79 OBJECT_IDENTIFIER else
80 LBRACE {
81 OBJECT_IDENTIFIER out_string
81 LPAREN (
81 STRING "Enter appropriate option\n"
81 RPAREN )
81 SEMI ;
82 OBJECT_IDENTIFIER main
82 LPAREN (
82 RPAREN )
82 SEMI ;
83 RBRACE }
85 OBJECT_IDENTIFIER fi
85 SEMI ;
86 RBRACE }
88 OBJECT_IDENTIFIER fi
88 SEMI ;
90 OBJECT_IDENTIFIER out_string
90 LPAREN (
90 STRING "\n"
90 RPAREN )
90 SEMI ;
91 RBRACE }
92 RBRACE }
92 SEMI ;
94 RBRACE }
94 SEMI ;
