13 CLASS class
13 TYPE_IDENTIFIER A2I
13 LBRACE {
15 OBJECT_IDENTIFIER c2i
15 LPAREN (
15 OBJECT_IDENTIFIER char
15 COLON :
15 TYPE_IDENTIFIER String
15 RPAREN )
15 COLON :
15 TYPE_IDENTIFIER Int
15 LBRACE {
16 IF if
16 OBJECT_IDENTIFIER char
16 EQUALS =
16 STRING "0"
16 THEN then
16 INTEGERS 0
16 ELSE else
17 IF if
17 OBJECT_IDENTIFIER char
17 EQUALS =
17 STRING "1"
17 THEN then
17 INTEGERS 1
17 ELSE else
18 IF if
18 OBJECT_IDENTIFIER char
18 EQUALS =
18 STRING "2"
18 THEN then
18 INTEGERS 2
18 ELSE else
19 IF if
19 OBJECT_IDENTIFIER char
19 EQUALS =
19 STRING "3"
19 THEN then
19 INTEGERS 3
19 ELSE else
20 IF if
20 OBJECT_IDENTIFIER char
20 EQUALS =
20 STRING "4"
20 THEN then
20 INTEGERS 4
20 ELSE else
21 IF if
21 OBJECT_IDENTIFIER char
21 EQUALS =
21 STRING "5"
21 THEN then
21 INTEGERS 5
21 ELSE else
22 IF if
22 OBJECT_IDENTIFIER char
22 EQUALS =
22 STRING "6"
22 THEN then
22 INTEGERS 6
22 ELSE else
23 IF if
23 OBJECT_IDENTIFIER char
23 EQUALS =
23 STRING "7"
23 THEN then
23 INTEGERS 7
23 ELSE else
24 IF if
24 OBJECT_IDENTIFIER char
24 EQUALS =
24 STRING "8"
24 THEN then
24 INTEGERS 8
24 ELSE else
25 IF if
25 OBJECT_IDENTIFIER char
25 EQUALS =
25 STRING "9"
25 THEN then
25 INTEGERS 9
25 ELSE else
26 LBRACE {
26 OBJECT_IDENTIFIER abort
26 LPAREN (
26 RPAREN )
26 SEMI ;
26 INTEGERS 0
26 SEMI ;
26 RBRACE }
27 FI fi
27 FI fi
27 FI fi
27 FI fi
27 FI fi
27 FI fi
27 FI fi
27 FI fi
27 FI fi
27 FI fi
28 RBRACE }
28 SEMI ;
33 OBJECT_IDENTIFIER i2c
33 LPAREN (
33 OBJECT_IDENTIFIER i
33 COLON :
33 TYPE_IDENTIFIER Int
33 RPAREN )
33 COLON :
33 TYPE_IDENTIFIER String
33 LBRACE {
34 IF if
34 OBJECT_IDENTIFIER i
34 EQUALS =
34 INTEGERS 0
34 THEN then
34 STRING "0"
34 ELSE else
35 IF if
35 OBJECT_IDENTIFIER i
35 EQUALS =
35 INTEGERS 1
35 THEN then
35 STRING "1"
35 ELSE else
36 IF if
36 OBJECT_IDENTIFIER i
36 EQUALS =
36 INTEGERS 2
36 THEN then
36 STRING "2"
36 ELSE else
37 IF if
37 OBJECT_IDENTIFIER i
37 EQUALS =
37 INTEGERS 3
37 THEN then
37 STRING "3"
37 ELSE else
38 IF if
38 OBJECT_IDENTIFIER i
38 EQUALS =
38 INTEGERS 4
38 THEN then
38 STRING "4"
38 ELSE else
39 IF if
39 OBJECT_IDENTIFIER i
39 EQUALS =
39 INTEGERS 5
39 THEN then
39 STRING "5"
39 ELSE else
40 IF if
40 OBJECT_IDENTIFIER i
40 EQUALS =
40 INTEGERS 6
40 THEN then
40 STRING "6"
40 ELSE else
41 IF if
41 OBJECT_IDENTIFIER i
41 EQUALS =
41 INTEGERS 7
41 THEN then
41 STRING "7"
41 ELSE else
42 IF if
42 OBJECT_IDENTIFIER i
42 EQUALS =
42 INTEGERS 8
42 THEN then
42 STRING "8"
42 ELSE else
43 IF if
43 OBJECT_IDENTIFIER i
43 EQUALS =
43 INTEGERS 9
43 THEN then
43 STRING "9"
43 ELSE else
44 LBRACE {
44 OBJECT_IDENTIFIER abort
44 LPAREN (
44 RPAREN )
44 SEMI ;
44 STRING ""
44 SEMI ;
44 RBRACE }
45 FI fi
45 FI fi
45 FI fi
45 FI fi
45 FI fi
45 FI fi
45 FI fi
45 FI fi
45 FI fi
45 FI fi
46 RBRACE }
46 SEMI ;
56 OBJECT_IDENTIFIER a2i
56 LPAREN (
56 OBJECT_IDENTIFIER s
56 COLON :
56 TYPE_IDENTIFIER String
56 RPAREN )
56 COLON :
56 TYPE_IDENTIFIER Int
56 LBRACE {
57 IF if
57 OBJECT_IDENTIFIER s
57 DOT .
57 OBJECT_IDENTIFIER length
57 LPAREN (
57 RPAREN )
57 EQUALS =
57 INTEGERS 0
57 THEN then
57 INTEGERS 0
57 ELSE else
58 IF if
58 OBJECT_IDENTIFIER s
58 DOT .
58 OBJECT_IDENTIFIER substr
58 LPAREN (
58 INTEGERS 0
58 COMMA ,
58 INTEGERS 1
58 RPAREN )
58 EQUALS =
58 STRING "-"
58 THEN then
58 TILDE ~
58 OBJECT_IDENTIFIER a2i_aux
58 LPAREN (
58 OBJECT_IDENTIFIER s
58 DOT .
58 OBJECT_IDENTIFIER substr
58 LPAREN (
58 INTEGERS 1
58 COMMA ,
58 OBJECT_IDENTIFIER s
58 DOT .
58 OBJECT_IDENTIFIER length
58 LPAREN (
58 RPAREN )
58 MINUS -
58 INTEGERS 1
58 RPAREN )
58 RPAREN )
58 ELSE else
59 IF if
59 OBJECT_IDENTIFIER s
59 DOT .
59 OBJECT_IDENTIFIER substr
59 LPAREN (
59 INTEGERS 0
59 COMMA ,
59 INTEGERS 1
59 RPAREN )
59 EQUALS =
59 STRING "+"
59 THEN then
59 OBJECT_IDENTIFIER a2i_aux
59 LPAREN (
59 OBJECT_IDENTIFIER s
59 DOT .
59 OBJECT_IDENTIFIER substr
59 LPAREN (
59 INTEGERS 1
59 COMMA ,
59 OBJECT_IDENTIFIER s
59 DOT .
59 OBJECT_IDENTIFIER length
59 LPAREN (
59 RPAREN )
59 MINUS -
59 INTEGERS 1
59 RPAREN )
59 RPAREN )
59 ELSE else
60 OBJECT_IDENTIFIER a2i_aux
60 LPAREN (
60 OBJECT_IDENTIFIER s
60 RPAREN )
61 FI fi
61 FI fi
61 FI fi
62 RBRACE }
62 SEMI ;
68 OBJECT_IDENTIFIER a2i_aux
68 LPAREN (
68 OBJECT_IDENTIFIER s
68 COLON :
68 TYPE_IDENTIFIER String
68 RPAREN )
68 COLON :
68 TYPE_IDENTIFIER Int
68 LBRACE {
69 LPAREN (
69 LET let
69 OBJECT_IDENTIFIER int
69 COLON :
69 TYPE_IDENTIFIER Int
69 ASSIGN <-
69 INTEGERS 0
69 IN in
70 LBRACE {
71 LPAREN (
71 LET let
71 OBJECT_IDENTIFIER j
71 COLON :
71 TYPE_IDENTIFIER Int
71 ASSIGN <-
71 OBJECT_IDENTIFIER s
71 DOT .
71 OBJECT_IDENTIFIER length
71 LPAREN (
71 RPAREN )
71 IN in
72 LPAREN (
72 LET let
72 OBJECT_IDENTIFIER i
72 COLON :
72 TYPE_IDENTIFIER Int
72 ASSIGN <-
72 INTEGERS 0
72 IN in
73 WHILE while
73 OBJECT_IDENTIFIER i
73 LT <
73 OBJECT_IDENTIFIER j
73 LOOP loop
74 LBRACE {
75 OBJECT_IDENTIFIER int
75 ASSIGN <-
75 OBJECT_IDENTIFIER int
75 MULT *
75 INTEGERS 10
75 PLUS +
75 OBJECT_IDENTIFIER c2i
75 LPAREN (
75 OBJECT_IDENTIFIER s
75 DOT .
75 OBJECT_IDENTIFIER substr
75 LPAREN (
75 OBJECT_IDENTIFIER i
75 COMMA ,
75 INTEGERS 1
75 RPAREN )
75 RPAREN )
75 SEMI ;
76 OBJECT_IDENTIFIER i
76 ASSIGN <-
76 OBJECT_IDENTIFIER i
76 PLUS +
76 INTEGERS 1
76 SEMI ;
77 RBRACE }
78 POOL pool
79 RPAREN )
80 RPAREN )
80 SEMI ;
81 OBJECT_IDENTIFIER int
81 SEMI ;
82 RBRACE }
83 RPAREN )
84 RBRACE }
84 SEMI ;
90 OBJECT_IDENTIFIER i2a
90 LPAREN (
90 OBJECT_IDENTIFIER i
90 COLON :
90 TYPE_IDENTIFIER Int
90 RPAREN )
90 COLON :
90 TYPE_IDENTIFIER String
90 LBRACE {
91 IF if
91 OBJECT_IDENTIFIER i
91 EQUALS =
91 INTEGERS 0
91 THEN then
91 STRING "0"
91 ELSE else
92 IF if
92 INTEGERS 0
92 LT <
92 OBJECT_IDENTIFIER i
92 THEN then
92 OBJECT_IDENTIFIER i2a_aux
92 LPAREN (
92 OBJECT_IDENTIFIER i
92 RPAREN )
92 ELSE else
93 STRING "-"
93 DOT .
93 OBJECT_IDENTIFIER concat
93 LPAREN (
93 OBJECT_IDENTIFIER i2a_aux
93 LPAREN (
93 OBJECT_IDENTIFIER i
93 MULT *
93 TILDE ~
93 INTEGERS 1
93 RPAREN )
93 RPAREN )
94 FI fi
94 FI fi
95 RBRACE }
95 SEMI ;
100 OBJECT_IDENTIFIER i2a_aux
100 LPAREN (
100 OBJECT_IDENTIFIER i
100 COLON :
100 TYPE_IDENTIFIER Int
100 RPAREN )
100 COLON :
100 TYPE_IDENTIFIER String
100 LBRACE {
101 IF if
101 OBJECT_IDENTIFIER i
101 EQUALS =
101 INTEGERS 0
101 THEN then
101 STRING ""
101 ELSE else
102 LPAREN (
102 LET let
102 OBJECT_IDENTIFIER next
102 COLON :
102 TYPE_IDENTIFIER Int
102 ASSIGN <-
102 OBJECT_IDENTIFIER i
102 DIV /
102 INTEGERS 10
102 IN in
103 OBJECT_IDENTIFIER i2a_aux
103 LPAREN (
103 OBJECT_IDENTIFIER next
103 RPAREN )
103 DOT .
103 OBJECT_IDENTIFIER concat
103 LPAREN (
103 OBJECT_IDENTIFIER i2c
103 LPAREN (
103 OBJECT_IDENTIFIER i
103 MINUS -
103 OBJECT_IDENTIFIER next
103 MULT *
103 INTEGERS 10
103 RPAREN )
103 RPAREN )
104 RPAREN )
105 FI fi
106 RBRACE }
106 SEMI ;
108 RBRACE }
108 SEMI ;
110 CLASS class
110 TYPE_IDENTIFIER Main
110 INHERITS inherits
110 TYPE_IDENTIFIER IO
110 LBRACE {
111 OBJECT_IDENTIFIER main
111 LPAREN (
111 RPAREN )
111 COLON :
111 TYPE_IDENTIFIER Object
111 LBRACE {
112 LET let
112 OBJECT_IDENTIFIER a
112 COLON :
112 TYPE_IDENTIFIER Int
112 ASSIGN <-
112 LPAREN (
112 NEW new
112 TYPE_IDENTIFIER A2I
112 RPAREN )
112 DOT .
112 OBJECT_IDENTIFIER a2i
112 LPAREN (
112 STRING "678987"
112 RPAREN )
112 COMMA ,
113 OBJECT_IDENTIFIER b
113 COLON :
113 TYPE_IDENTIFIER String
113 ASSIGN <-
113 LPAREN (
113 NEW new
113 TYPE_IDENTIFIER A2I
113 RPAREN )
113 DOT .
113 OBJECT_IDENTIFIER i2a
113 LPAREN (
113 INTEGERS 678987
113 RPAREN )
113 IN in
114 LBRACE {
115 OBJECT_IDENTIFIER out_int
115 LPAREN (
115 OBJECT_IDENTIFIER a
115 RPAREN )
115 SEMI ;
116 OBJECT_IDENTIFIER out_string
116 LPAREN (
116 STRING " == "
116 RPAREN )
116 SEMI ;
117 OBJECT_IDENTIFIER out_string
117 LPAREN (
117 OBJECT_IDENTIFIER b
117 RPAREN )
117 SEMI ;
118 OBJECT_IDENTIFIER out_string
118 LPAREN (
118 STRING "\n"
118 RPAREN )
118 SEMI ;
119 RBRACE }
120 RBRACE }
120 SEMI ;
121 RBRACE }
121 SEMI ;
